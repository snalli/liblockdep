*************************************************************
Lock dependency validator: Copyright (c) 2012 Sanketh Nalli
... MAX_LOCK_DEPTH:          64
... MAX_LOCKDEP_ENTRIES:     256
... MAX_NR_THREADS:          64
 memory used by lock dependency info: 5128 bytes
 per task-struct memory footprint: 1044 bytes
*************************************************************

new dependency:
(&mutex) , at: 13, func, client.c => 
(&mutex_1) , at: 14, func, client.c
by: &myThread/3077745520 


new dependency:
(&mutex_1) , at: 14, func, client.c => 
(&mutex_2) , at: 15, func, client.c
by: &myThread/3077745520 


=======================================================
[ INFO: possible circular locking dependency detected ]
-------------------------------------------------------
&myThread_1/3069352816 is trying to acquire lock:
(&mutex) , at: 25, func_1, client.c
but task is already holding lock:
(&mutex_1) , at: 24, func_1, client.c
which already depends on the new lock.


new dependency:
(&mutex_1) , at: 24, func_1, client.c => 
(&mutex) , at: 25, func_1, client.c
by: &myThread_1/3069352816 

